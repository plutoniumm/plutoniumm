import{S as as,i as ts,s as ps,k as e,q as o,a as v,l as c,m as l,r as u,h as n,c as d,n as W,b as t,G as p,B as G}from"./index-847d9848.js";function es(X){let k,C,M,y,I,S,g,T,x,m,Z=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">async</span> <span class="token attr-name">defer</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//manav.ch/mistake.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token comment">&lt;!-- Multiple components also work --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>svelte<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sv-count<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>App.svelte<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sv-count</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sv-count</span><span class="token punctuation">></span></span></code>`,q,i,U,w,D,O,_,J,j,h,L,A,r,R,E,Y,B,H,f,$=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token comment">// Sufficiently complex file</span>
  <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> onMount <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"svelte"</span><span class="token punctuation">;</span>
  <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> transition_in <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"svelte/internal"</span><span class="token punctuation">;</span>

  <span class="token comment">// all modules will be auto-injected</span>
  <span class="token keyword">import</span> moment <span class="token keyword">from</span> <span class="token string">"moment"</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token function">onMount</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">const</span> ctr <span class="token operator">=</span>
      <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">moment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"dddd"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">clearInterval</span><span class="token punctuation">(</span>ctr<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gr<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>color:red;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token language-javascript"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
  <span class="token selector">.gr</span> <span class="token punctuation">&#123;</span>
    <span class="token property">background</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code>`;return{c(){k=e("h2"),C=o("MistakeJS Usage"),M=v(),y=e("p"),I=o("Mistake is a simple wrapper around fetch to talk to my server to compile Svelte components. If you have to use this something somewhere has catastrophically gone wrong i.e you have made a mistake."),S=v(),g=e("h3"),T=o("Usage"),x=v(),m=e("pre"),q=v(),i=e("p"),U=o("This will fetch App.svelte and compile it as a web component of "),w=e("code"),D=o("type=svelte"),O=o(" with the tag name "),_=e("code"),J=o("sv-count"),j=v(),h=e("h2"),L=o("Example Svelte file"),A=v(),r=e("p"),R=o("As long as you don’t have any local file dependencies, you should generally be able to compile any self contained pure component. You can also use "),E=e("code"),Y=o("import"),B=o(" statements to import modules from npm."),H=v(),f=e("pre"),this.h()},l(s){k=c(s,"H2",{});var a=l(k);C=u(a,"MistakeJS Usage"),a.forEach(n),M=d(s),y=c(s,"P",{});var z=l(y);I=u(z,"Mistake is a simple wrapper around fetch to talk to my server to compile Svelte components. If you have to use this something somewhere has catastrophically gone wrong i.e you have made a mistake."),z.forEach(n),S=d(s),g=c(s,"H3",{});var F=l(g);T=u(F,"Usage"),F.forEach(n),x=d(s),m=c(s,"PRE",{class:!0});var ss=l(m);ss.forEach(n),q=d(s),i=c(s,"P",{});var b=l(i);U=u(b,"This will fetch App.svelte and compile it as a web component of "),w=c(b,"CODE",{});var K=l(w);D=u(K,"type=svelte"),K.forEach(n),O=u(b," with the tag name "),_=c(b,"CODE",{});var N=l(_);J=u(N,"sv-count"),N.forEach(n),b.forEach(n),j=d(s),h=c(s,"H2",{});var Q=l(h);L=u(Q,"Example Svelte file"),Q.forEach(n),A=d(s),r=c(s,"P",{});var P=l(r);R=u(P,"As long as you don’t have any local file dependencies, you should generally be able to compile any self contained pure component. You can also use "),E=c(P,"CODE",{});var V=l(E);Y=u(V,"import"),V.forEach(n),B=u(P," statements to import modules from npm."),P.forEach(n),H=d(s),f=c(s,"PRE",{class:!0});var ns=l(f);ns.forEach(n),this.h()},h(){W(m,"class","language-html"),W(f,"class","language-svelte")},m(s,a){t(s,k,a),p(k,C),t(s,M,a),t(s,y,a),p(y,I),t(s,S,a),t(s,g,a),p(g,T),t(s,x,a),t(s,m,a),m.innerHTML=Z,t(s,q,a),t(s,i,a),p(i,U),p(i,w),p(w,D),p(i,O),p(i,_),p(_,J),t(s,j,a),t(s,h,a),p(h,L),t(s,A,a),t(s,r,a),p(r,R),p(r,E),p(E,Y),p(r,B),t(s,H,a),t(s,f,a),f.innerHTML=$},p:G,i:G,o:G,d(s){s&&n(k),s&&n(M),s&&n(y),s&&n(S),s&&n(g),s&&n(x),s&&n(m),s&&n(q),s&&n(i),s&&n(j),s&&n(h),s&&n(A),s&&n(r),s&&n(H),s&&n(f)}}}class cs extends as{constructor(k){super(),ts(this,k,null,es,ps,{})}}export{cs as default};
