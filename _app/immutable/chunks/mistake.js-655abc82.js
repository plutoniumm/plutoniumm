import{S as ds,i as ys,s as hs,k as e,q as c,a as i,l as o,m as l,r as u,h as a,c as k,n as is,b as p,G as t,B as ss}from"./index-57707a8e.js";function gs(ks){let m,J,x,h,R,j,g,V,q,f,E,X,Y,b,B,P,w,G,A,d,rs=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">async</span> <span class="token attr-name">defer</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>//manav.ch/mistake.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token comment">&lt;!-- Multiple components also work --></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>svelte<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>sv-count<span class="token punctuation">"</span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>App.svelte<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sv-count</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sv-count</span><span class="token punctuation">></span></span></code>`,D,r,z,M,F,K,S,N,H,_,Q,L,v,W,I,Z,$,O,y,ms=`<code class="language-svelte"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
  <span class="token comment">// Sufficiently complex file</span>
  <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> onMount <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"svelte"</span><span class="token punctuation">;</span>
  <span class="token keyword">import</span> <span class="token punctuation">&#123;</span> transition_in <span class="token punctuation">&#125;</span> <span class="token keyword">from</span> <span class="token string">"svelte/internal"</span><span class="token punctuation">;</span>

  <span class="token comment">// all modules will be auto-injected</span>
  <span class="token keyword">import</span> moment <span class="token keyword">from</span> <span class="token string">"moment"</span><span class="token punctuation">;</span>

  <span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

  <span class="token function">onMount</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">const</span> ctr <span class="token operator">=</span>
      <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">moment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"dddd"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token function">clearInterval</span><span class="token punctuation">(</span>ctr<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>gr<span class="token punctuation">"</span></span> <span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>color:red;<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token language-javascript"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
  <span class="token selector">.gr</span> <span class="token punctuation">&#123;</span>
    <span class="token property">background</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
  <span class="token punctuation">&#125;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code>`;return{c(){m=e("h2"),J=c("MistakeJS Usage"),x=i(),h=e("p"),R=c("Mistake is a simple wrapper around fetch to talk to my server to compile Svelte components. If you have to use this something somewhere has catastrophically gone wrong i.e you have made a mistake."),j=i(),g=e("p"),V=c("I may support other frameworks if needed as long as"),q=i(),f=e("ul"),E=e("li"),X=c("They are not JSX based. I can’t deal with leaky abstractions."),Y=i(),b=e("li"),B=c("They are not VDOM based. The objective is to sacrifice speed not throw it out altogether."),P=i(),w=e("h3"),G=c("Usage"),A=i(),d=e("pre"),D=i(),r=e("p"),z=c("This will fetch App.svelte and compile it as a web component of "),M=e("code"),F=c("type=svelte"),K=c(" with the tag name "),S=e("code"),N=c("sv-count"),H=i(),_=e("h2"),Q=c("Example Svelte file"),L=i(),v=e("p"),W=c("As long as you don’t have any local file dependencies, you should generally be able to compile any self contained pure component. You can also use "),I=e("code"),Z=c("import"),$=c(" statements to import modules from npm."),O=i(),y=e("pre"),this.h()},l(s){m=o(s,"H2",{});var n=l(m);J=u(n,"MistakeJS Usage"),n.forEach(a),x=k(s),h=o(s,"P",{});var as=l(h);R=u(as,"Mistake is a simple wrapper around fetch to talk to my server to compile Svelte components. If you have to use this something somewhere has catastrophically gone wrong i.e you have made a mistake."),as.forEach(a),j=k(s),g=o(s,"P",{});var ns=l(g);V=u(ns,"I may support other frameworks if needed as long as"),ns.forEach(a),q=k(s),f=o(s,"UL",{});var U=l(f);E=o(U,"LI",{});var ts=l(E);X=u(ts,"They are not JSX based. I can’t deal with leaky abstractions."),ts.forEach(a),Y=k(U),b=o(U,"LI",{});var ps=l(b);B=u(ps,"They are not VDOM based. The objective is to sacrifice speed not throw it out altogether."),ps.forEach(a),U.forEach(a),P=k(s),w=o(s,"H3",{});var es=l(w);G=u(es,"Usage"),es.forEach(a),A=k(s),d=o(s,"PRE",{class:!0});var fs=l(d);fs.forEach(a),D=k(s),r=o(s,"P",{});var T=l(r);z=u(T,"This will fetch App.svelte and compile it as a web component of "),M=o(T,"CODE",{});var os=l(M);F=u(os,"type=svelte"),os.forEach(a),K=u(T," with the tag name "),S=o(T,"CODE",{});var ls=l(S);N=u(ls,"sv-count"),ls.forEach(a),T.forEach(a),H=k(s),_=o(s,"H2",{});var cs=l(_);Q=u(cs,"Example Svelte file"),cs.forEach(a),L=k(s),v=o(s,"P",{});var C=l(v);W=u(C,"As long as you don’t have any local file dependencies, you should generally be able to compile any self contained pure component. You can also use "),I=o(C,"CODE",{});var us=l(I);Z=u(us,"import"),us.forEach(a),$=u(C," statements to import modules from npm."),C.forEach(a),O=k(s),y=o(s,"PRE",{class:!0});var vs=l(y);vs.forEach(a),this.h()},h(){is(d,"class","language-html"),is(y,"class","language-svelte")},m(s,n){p(s,m,n),t(m,J),p(s,x,n),p(s,h,n),t(h,R),p(s,j,n),p(s,g,n),t(g,V),p(s,q,n),p(s,f,n),t(f,E),t(E,X),t(f,Y),t(f,b),t(b,B),p(s,P,n),p(s,w,n),t(w,G),p(s,A,n),p(s,d,n),d.innerHTML=rs,p(s,D,n),p(s,r,n),t(r,z),t(r,M),t(M,F),t(r,K),t(r,S),t(S,N),p(s,H,n),p(s,_,n),t(_,Q),p(s,L,n),p(s,v,n),t(v,W),t(v,I),t(I,Z),t(v,$),p(s,O,n),p(s,y,n),y.innerHTML=ms},p:ss,i:ss,o:ss,d(s){s&&a(m),s&&a(x),s&&a(h),s&&a(j),s&&a(g),s&&a(q),s&&a(f),s&&a(P),s&&a(w),s&&a(A),s&&a(d),s&&a(D),s&&a(r),s&&a(H),s&&a(_),s&&a(L),s&&a(v),s&&a(O),s&&a(y)}}}class _s extends ds{constructor(m){super(),ys(this,m,null,gs,hs,{})}}export{_s as default};
